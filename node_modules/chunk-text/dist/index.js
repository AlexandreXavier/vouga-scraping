'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (text, chunkSize) {
  assertIsValidText(text);
  assertIsValidChunkSize(chunkSize);

  var chunks = [];
  var characters = runes(text);

  while (characters.length > chunkSize) {
    var splitAt = characters.lastIndexOf(' ', chunkSize);

    if (splitAt === -1) {
      // No whitespace found, we need to truncate the word in that case.
      var chunk = characters.slice(0, chunkSize).join('');
      chunks.push(chunk);
      characters = characters.slice(chunkSize); // eslint-disable-line no-param-reassign
    } else {
      var _chunk = characters.slice(0, splitAt).join('');
      chunks.push(_chunk);
      characters = characters.slice(splitAt + 1); // eslint-disable-line no-param-reassign
    }
  }

  chunks.push(characters.join(''));

  return chunks;
};

/* eslint-disable import/no-commonjs */
var runes = require('runes');

var assertIsValidText = function assertIsValidText(text) {
  if (typeof text !== 'string') {
    throw new TypeError('Text should be provided as first argument and be a string.');
  }
};

var assertIsValidChunkSize = function assertIsValidChunkSize(chunkSize) {
  if (typeof chunkSize !== 'number' || chunkSize <= 0) {
    throw new TypeError('Size should be provided as 2nd argument and be a number greater than zero.');
  }
};

module.exports = exports['default'];